# =========================================================================================
#TEST INSERTION ET EXTRACTION IMAGE DANS LA BASE

# import sqlite3

# conn = sqlite3.connect("ma_base.db")
# cur = conn.cursor()

# cur.execute("""
# CREATE TABLE IF NOT EXISTS photos (
#     id INTEGER PRIMARY KEY AUTOINCREMENT,
#     nom TEXT NOT NULL,
#     image BLOB NOT NULL
# )
# """)

# print("‚úÖ Table 'photos' cr√©√©e avec succ√®s !")


# def lire_image(fichier):
#     with open(fichier, 'rb') as f:
#         return f.read()

# conn = sqlite3.connect("ma_base.db")
# cur = conn.cursor()

# nom = "chat"
# image_blob = lire_image("car.png")  # mets ici ton image

# cur.execute("INSERT INTO photos (nom, image) VALUES (?, ?)", (nom, image_blob))

# conn.commit()
# conn.close()

# print("‚úÖ Image ins√©r√©e avec succ√®s !")

# =========================================================================================

from PIL import Image
import io

conn = sqlite3.connect("ma_base.db")
cur = conn.cursor()

cur.execute("SELECT image FROM photos WHERE nom = ?", ("chat",))
resultat = cur.fetchone()

if resultat:
    image_blob = resultat[0]
    image = Image.open(io.BytesIO(image_blob))
    image.show()  # ouvre l‚Äôimage avec la visionneuse du syst√®me
else:
    print("‚ùå Image non trouv√©e.")

conn.close()


import sqlite3
from PIL import Image
import io
import os

# ======================================================
# 1Ô∏è‚É£ Cr√©ation / connexion √† la base
# ======================================================
db_name = "ma_base.db"
conn = sqlite3.connect(db_name)
cur = conn.cursor()
print("‚úÖ Base de donn√©es connect√©e :", db_name)


# ======================================================
# 2Ô∏è‚É£ Cr√©ation d'une table
# ======================================================
cur.execute("""
CREATE TABLE IF NOT EXISTS photos (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nom TEXT NOT NULL,
    image BLOB
)
""")
print("‚úÖ Table 'photos' cr√©√©e (si elle n‚Äôexistait pas).")


# ======================================================
# 3Ô∏è‚É£ Insertion de donn√©es (exemple avec image)
# ======================================================
def lire_image(fichier):
    with open(fichier, 'rb') as f:
        return f.read()

# V√©rifie si le fichier existe avant d'ins√©rer
if os.path.exists("car.png"):
    image_blob = lire_image("car.png")
    cur.execute("INSERT INTO photos (nom, image) VALUES (?, ?)", ("chat", image_blob))
    print("‚úÖ Image ins√©r√©e dans la table.")
else:
    print("‚ö†Ô∏è Image 'car.png' introuvable, insertion ignor√©e.")

conn.commit()


# ======================================================
# 4Ô∏è‚É£ Lecture des donn√©es
# ======================================================
cur.execute("SELECT id, nom FROM photos")
photos = cur.fetchall()

print("\nüì∏ Contenu de la table 'photos' :")
for p in photos:
    print(p)


# ======================================================
# 5Ô∏è‚É£ Modification (UPDATE) d‚Äôun champ existant
# ======================================================
cur.execute("UPDATE photos SET nom = ? WHERE nom = ?", ("chat_modifi√©", "chat"))
conn.commit()
print("\n‚úèÔ∏è Nom de l‚Äôimage modifi√© avec succ√®s !")


# ======================================================
# 6Ô∏è‚É£ Suppression (DELETE) d‚Äôun enregistrement
# ======================================================
cur.execute("DELETE FROM photos WHERE nom = ?", ("chat_modifi√©",))
conn.commit()
print("üóëÔ∏è Enregistrement supprim√© avec succ√®s.")


# ======================================================
# 7Ô∏è‚É£ Ajout d‚Äôune nouvelle table
# ======================================================
cur.execute("""
CREATE TABLE IF NOT EXISTS utilisateurs (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nom TEXT NOT NULL,
    email TEXT UNIQUE
)
""")
conn.commit()
print("\n‚úÖ Nouvelle table 'utilisateurs' ajout√©e avec succ√®s.")


# ======================================================
# 8Ô∏è‚É£ Ajout d‚Äôune colonne √† une table existante
# ======================================================
try:
    cur.execute("ALTER TABLE utilisateurs ADD COLUMN age INTEGER DEFAULT 0")
    conn.commit()
    print("üß± Colonne 'age' ajout√©e √† la table 'utilisateurs'.")
except sqlite3.OperationalError:
    print("‚ö†Ô∏è Colonne 'age' existe d√©j√† ‚Äî aucune modification.")


# ======================================================
# 9Ô∏è‚É£ Insertion et lecture dans la nouvelle table
# ======================================================
cur.execute("INSERT INTO utilisateurs (nom, email, age) VALUES (?, ?, ?)", 
            ("Alice", "alice@example.com", 25))
cur.execute("INSERT INTO utilisateurs (nom, email, age) VALUES (?, ?, ?)", 
            ("Bob", "bob@example.com", 30))
conn.commit()
print("\n‚úÖ Donn√©es ins√©r√©es dans 'utilisateurs'.")

cur.execute("SELECT * FROM utilisateurs")
utilisateurs = cur.fetchall()

print("\nüë§ Contenu de la table 'utilisateurs' :")
for u in utilisateurs:
    print(u)


# ======================================================
# üîü Suppression d‚Äôune table compl√®te
# ======================================================
# ‚ö†Ô∏è √Ä utiliser avec pr√©caution ‚Äî supprime toute la table !
cur.execute("DROP TABLE IF EXISTS temp_table")
print("\nüß® Table 'temp_table' supprim√©e (si elle existait).")


# ======================================================
# üîÅ Exemple : ex√©cuter plusieurs requ√™tes SQL brutes
# ======================================================
cur.executescript("""
CREATE TABLE IF NOT EXISTS produits (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nom TEXT,
    prix REAL
);

INSERT INTO produits (nom, prix) VALUES ('Jus de mangue', 2.5);
INSERT INTO produits (nom, prix) VALUES ('Bissap', 2.0);
""")
conn.commit()
print("\n‚úÖ Requ√™tes multiples ex√©cut√©es avec succ√®s.")


# ======================================================
# 1Ô∏è‚É£1Ô∏è‚É£ Lecture avanc√©e : filtrage et tri
# ======================================================
cur.execute("SELECT nom, prix FROM produits WHERE prix > ? ORDER BY prix DESC", (2,))
resultats = cur.fetchall()

print("\nüí∞ Produits avec prix > 2 :")
for r in resultats:
    print(r)


# ======================================================
# 1Ô∏è‚É£2Ô∏è‚É£ Lecture d‚Äôune image depuis la base et affichage
# ======================================================
cur.execute("SELECT image FROM photos LIMIT 1")
resultat = cur.fetchone()

if resultat and resultat[0]:
    image_blob = resultat[0]
    image = Image.open(io.BytesIO(image_blob))
    image.show()
    print("üñºÔ∏è Image affich√©e avec succ√®s.")
else:
    print("‚ùå Aucune image trouv√©e dans la table 'photos'.")


# ======================================================
# 1Ô∏è‚É£3Ô∏è‚É£ Fermeture propre de la connexion
# ======================================================
conn.close()
print("\nüîí Connexion ferm√©e proprement.")

